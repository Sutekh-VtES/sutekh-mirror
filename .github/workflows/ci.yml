name: Sutekh CI

on: [push, pull_request]

jobs:
  postgres-linux:

    runs-on: ${{ matrix.ubuntu }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    name: Postgres - Python ${{ matrix.python-version }}, Ubuntu ${{ matrix.ubuntu }}
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.7, 3.8, 3.9]
        ubuntu: ['ubuntu-18.04', 'ubuntu-20.04']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install APT Dependencies
      run: |
        sudo apt-get -y -q update
        sudo apt-get -y -q install gir1.2-gtk-3.0 python3-gi librsvg2-common libgirepository1.0-dev pkg-config libcairo2-dev xvfb
    - name: Install PIP Dependencies
      run: |
        pip install mock pytest keyring ply sqlobject configobj PyGObject pycairo psycopg2
    - name: Create Postgres DB
      env:
        PGPASSWORD: postgres
      run: |
        # We use template0 so we can set the collation order to C.UTF-8
        createdb -U postgres -h localhost -w --lc-collate=C.UTF-8 --template template0 -w sutekh_test
    - name: Run Tests
      env:
        SUTEKH_TEST_DB: postgres://postgres:postgres@localhost/sutekh_test?driver=psycopg&charset=utf-8
      run: |
        cd sutekh
        xvfb-run --auto-servernum pytest

  mysql-linux:

    runs-on: ${{ matrix.ubuntu }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 3306:3306

    name: MySQL - Python ${{ matrix.python-version }}, Ubuntu ${{ matrix.ubuntu }}
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.7, 3.8, 3.9]
        ubuntu: ['ubuntu-18.04', 'ubuntu-20.04']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install APT Dependencies
      run: |
        sudo apt-get -y -q update
        sudo apt-get -y -q install gir1.2-gtk-3.0 python3-gi librsvg2-common libgirepository1.0-dev pkg-config libcairo2-dev xvfb
    - name: Install PIP Dependencies
      run: |
        pip install mock pytest keyring ply sqlobject configobj PyGObject pycairo mysql-connector
    - name: Create MySQL DB
      run: |
        mysql -uroot -h 127.0.0.1 -e 'create database sutekh_test;'
    - name: Run Tests
      env:
        SUTEKH_TEST_DB: mysql://root:@127.0.0.1/sutekh_test?driver=connector
      run: |
        cd sutekh
        xvfb-run --auto-servernum pytest

  sqlite-linux:

    runs-on: ${{ matrix.ubuntu }}

    name: SQLite - Python ${{ matrix.python-version }}, Ubuntu ${{ matrix.ubuntu }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        ubuntu: ['ubuntu-18.04', 'ubuntu-20.04']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install APT Dependencies
      run: |
        sudo apt-get -y -q update
        sudo apt-get -y -q install gir1.2-gtk-3.0 python3-gi librsvg2-common libgirepository1.0-dev pkg-config libcairo2-dev xvfb
    - name: Install PIP Dependencies
      run: |
        pip install mock pytest keyring ply sqlobject configobj PyGObject pycairo
    - name: Run Tests
      run: |
        pushd sutekh
        xvfb-run --auto-servernum pytest
        popd
    - name: Build sdist
      run: |
        pushd sutekh
        python3 ./setup.py sdist
        popd
    - name: Upload sdist
      uses: actions/upload-artifact@v2
      if: matrix.python-version == '3.9' && matrix.ubuntu == 'ubuntu-20.04'
      with:
        name: sutekh-sdist
        path: sutekh/dist/Sutekh*tar*


  sqlite-win:

    runs-on: windows-latest
    name: Windows

    steps:
    - uses: actions/checkout@v2
    - name: Setup MSYS
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-x86_64-gtk3
          mingw-w64-x86_64-python-pip
          mingw-w64-x86_64-python-gobject
    - name: Install PIP dependencies
      shell: msys2 {0}
      run: |
        pip install keyring ply sqlobject configobj pytest mock cx-Freeze
    - name: Run tests
      shell: mysys2 {0}
      run: |
        cd sutekh
        pytest
        cd ..
    - name: Build package
      shell: mysys2 {0}
      run: |
        cd sutekh
        python3 setup.py build_exe
        ls dist
        cd ..
